version: 2.1

orbs:
  bumpversion: parkmobileus/bumpversion@0.0.3
  slack: circleci/slack@3.4.2

commands:
  create-release:
    description: "Create Release Ticket in FreshService"
    steps:
      - run:
          name: "Create Release Ticket"
          command: |
            mkdir bin && freshservice-cli create_release --apikey ${FRESHSVC_APIKEY} --subject "$(git log --format=%s -n 1 $CIRCLE_SHA1)" --email ${FRESHSVC_EMAIL} --duration 15 > bin/release
  close-release:
    description: "Close Release Ticket in FreshService"
    parameters:
      ticketnumber:
        type: string
        default: "0"
        description: "The number of the release ticket being closed"
    steps:
      - run:
          name: "Close Release Ticket"
          command: |
            freshservice-cli close_release --id << parameters.ticketnumber >> --apikey ${FRESHSVC_APIKEY} --email ${FRESHSVC_EMAIL}

jobs:
  run-tests:
    resource_class: small
    docker:
      - image: cimg/python:3.7.4
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m pip install -e . --user --extra-index-url https://${ARTIFACTORY_USER}:${ARTIFACTORY_PASS}@parkmobile.jfrog.io/artifactory/api/pypi/pypi-local/simple
      - run:
          name: Run flake8
          command: |
            python3 -m flake8 src
      - run:
          name: Run pylint
          command: |
            python3 -m pylint src
      - run:
          name: Run pytest
          command: |
            python3 -m pytest --cov=src --cov-report term-missing .
      - run:
          name: Run coverage report
          command: |
            coverage report --fail-under=70
  register:
    resource_class: small
    docker:
      - image: cimg/python:3.7.4
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            python3 -m pip install -e . --user --extra-index-url https://${ARTIFACTORY_USER}:${ARTIFACTORY_PASS}@parkmobile.jfrog.io/artifactory/api/pypi/pypi-local/simple
      - run:
          name: Install Docker TLS
          command: |
            python3 -m pip install 'docker[tls]'
      - run:
          name: Login to Docker registry
          command: |
            echo ${JFROG_API_KEY} | docker login -u ${JFROG_USER} --password-stdin parkmobile-docker.jfrog.io
      - run:
          name: Login to Prefect Cloud
          command: |
            prefect auth login --token ${PREFECT_TOKEN}
      - run:
          name: Switch from Prefect Server to Cloud
          command: |
            prefect backend cloud
      - run:
          name: Register Prefect Flow to Cloud
          command: |
            prefect register flow --file src/deploy.py --name 'Trend grabber and image generator' --project 'sandbox' --label 'prefect14'
  slack-release-notification:
    resource_class: small
    docker:
      - image: cimg/python:3.7.4
    steps:
      - run:
          name: Get release version for flow
          command: |
            echo 'export SLACK_MSG="${CIRCLE_BRANCH}: *Trend grabber and image generator* has been deployed to Prefect Cloud! :tada:"' >> $BASH_ENV
      - slack/notify:
          message: $SLACK_MSG
          webhook: $WEBHOOK_ALERTS_ICEBURGERS
  create-release:
    docker:
      - image: parkmobile-docker.jfrog.io/sre/freshservice-cli:1.0.4
        auth:
          username: $ARTIFACTORY_USER
          password: $ARTIFACTORY_PASS
    description: "Create Freshservice Ticket"
    working_directory: ~/project
    resource_class: small
    steps:
      - checkout
      - create-release
      - persist_to_workspace:
          root: /home/circleci/project/bin
          paths:
            - release
  close-release:
    docker:
      - image: parkmobile-docker.jfrog.io/sre/freshservice-cli:1.0.4
        auth:
          username: $ARTIFACTORY_USER
          password: $ARTIFACTORY_PASS
    description: "Create Freshservice Ticket"
    working_directory: ~/project
    resource_class: small
    steps:
      - attach_workspace:
          at: /home/circleci/project/bin
      - close-release:
          ticketnumber: $(awk '{print $2}' /home/circleci/project/bin/release)

workflows:
  prefect-circle:
    jobs:
      - run-tests:
          context: Shared-EnvVars
      - bumpversion/forceupdate:
          git-user: CircleCI-Iceburgers
          git-email: iceburgers@parkmobile.io
          branch: develop
          requires:
            - run-tests
          filters:
            branches:
              only:
                - master
      - bumpversion/createbranch:
          git-user: CircleCI-Iceburgers
          git-email: iceburgers@parkmobile.io
          branch: release/patch
          requires:
            - run-tests
          filters:
            branches:
              only:
                - develop
      # - create-release:
      #     context: Shared-EnvVars
      #     requires:
      #       - bumpversion/bumpversion
      #     filters:
      #       branches:
      #         only:
      #           - /^release\/.*$/
      - register:
          context: Shared-EnvVars
          requires:
            - run-tests
          filters:
            branches:
              only:
                - /^release\/.*$/
      # - close-release:
      #     context: Shared-EnvVars
      #     requires:
      #       - register
      #     filters:
      #       branches:
      #         only:
      #           - /^release\/.*$/
      - slack-release-notification:
          context: Shared-EnvVars
          requires:
            - register
          filters:
            branches:
              only:
                - /^release\/.*$/
      - bumpversion/bumpversion:
          git-user: CircleCI-Iceburgers
          git-email: iceburgers@parkmobile.io
          version-from-release-branch: true
          requires:
            - slack-release-notification
          filters:
            branches:
              only:
                - /^release\/.*$/
      - bumpversion/forceupdate:
          git-user: CircleCI-Iceburgers
          git-email: iceburgers@parkmobile.io
          branch: master
          requires:
            - bumpversion/bumpversion
          filters:
            branches:
              only:
                - /^release\/.*$/